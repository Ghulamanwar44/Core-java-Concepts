 -------Map-----------

-A map contains values on the basis of key, i.e. key and value pair. Each key and value pair is known as an entry.
-A Map contains unique keys.
-A Map doesn't allow duplicate keys, but you can have duplicate values. HashMap and LinkedHashMap allow null keys and values, but TreeMap doesn't allow any null key or value.
-A Map is useful if you have to search, update or delete elements on the basis of a key.
-There are two interfaces for implementing Map in java: Map and SortedMap, and three classes: HashMap, LinkedHashMap, and TreeMap.
-A Map can't be traversed, so you need to convert it into Set using keySet() or entrySet() method.
-Order of keys is not preserved


-------Methods-------

put(K key, V value): ---> Associates the specified value with the specified key in the map.
get(Object key): -------> Returns the value to which the specified key is mapped, or null if the key is not present in the map.
remove(Object key): ------------> Removes the mapping for the specified key from the map if it is present.
containsKey(Object key): -------> Returns true if the map contains a mapping for the specified key.
containsValue(Object value): ---> Returns true if the map maps one or more keys to the specified value.
size(): ---------> Returns the number of key-value mappings in the map.
isEmpty(): ------> Returns true if the map contains no key-value mappings.
keySet(): -------> Returns a Set view of the keys contained in the map.
values(): -------> Returns a Collection view of the values contained in the map.
entrySet(): -----> Returns a Set view of the mappings contained in the map.


----Implementation------------

1-HashMap	      -> HashMap is the implementation of Map, but it doesn't maintain any order.
2-LinkedHashMap   -> LinkedHashMap is the implementation of Map. It inherits HashMap class. It maintains insertion order.
3-TreeMap	      -> TreeMap is the implementation of Map and SortedMap. It maintains ascending order.